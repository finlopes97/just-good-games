---
const { title, url, pubDate, description, image } = Astro.props;
// Function to truncate text
const truncateText = (text, maxLength) => {
  if (text.length <= maxLength) return text;
  return text.slice(0, maxLength) + "...";
};
---

<div
  class="w-80 h-96
  p-4
  border-black border-4
  bg-white
  shadow-[8px_8px_0px_rgba(0,0,0,1)]
  hover:shadow-[4px_4px_0px_rgba(0,0,0,1)]
  transition-shadow duration-300 ease-in-out
  relative"
>
  <a href={url} class="block h-full">
    <article class="flex flex-col h-full">
      <figure class="w-full h-40 border-black border-b-2 overflow-hidden mb-4">
        {
          image ? (
            <img
              src={image.url}
              alt={image.alt}
              class="w-full h-full object-cover"
            />
          ) : (
            <div class="w-full h-full bg-accent-300 flex items-center justify-center">
              <span class="text-black font-bold text-xl">No image</span>
            </div>
          )
        }
      </figure>
      <h1
        class="text-2xl font-heading mb-2 overflow-hidden text-ellipsis whitespace-nowrap"
      >
        {truncateText(title, 50)}
      </h1>
      <p
        class="text-base bg-red-400 w-fit p-1 mb-2 shadow-[2px_2px_0px_rgba(0,0,0,1)]"
      >
        {pubDate}
      </p>
      <p
        class="text-sm mb-4 overflow-hidden"
        style="display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical;"
      >
        {truncateText(description, 90)}
      </p>
      <p
        class="bg-accent-400 font-body font-bold w-fit p-1 shadow-[2px_2px_0px_rgba(0,0,0,1)] transition-colors duration-200 ease-in-out hover:bg-accent-500"
      >
        Read more...
      </p>
    </article>
  </a>
</div>
