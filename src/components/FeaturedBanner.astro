---
const { title, url, pubDate, description, image } = Astro.props;
// Function to truncate text
const truncateText = (text, maxLength) => {
  if (text.length <= maxLength) return text;
  return text.slice(0, maxLength) + "...";
};
---

<div class="flex flex-col mx-auto w-1/2 h-auto">
  <h2
    class="text-2xl text-center md:text-3xl font-heading justify-center mx-auto mb-4"
  >
    Latest Featured Game
  </h2>
  <div
    class="flex flex-row gap-6 p-8 bg-white border-4 border-black shadow-[4px_4px_0px_rgb(0,0,0,1)]"
  >
    <figure class="w-1/2 h-auto border-black overflow-hidden">
      {
        image ? (
          <img
            src={image.url}
            alt={image.alt}
            class="w-full h-full object-cover"
          />
        ) : (
          <div class="w-full h-full bg-accent-300 flex items-center justify-center">
            <span class="text-black font-bold text-xl">No image</span>
          </div>
        )
      }
    </figure>
    <div class="flex flex-col">
      <h1
        class="text-3xl font-heading mb-2 overflow-hidden text-ellipsis whitespace-nowrap"
      >
        {truncateText(title, 50)}
      </h1>
      <p
        class="text-base bg-red-400 w-fit p-1 mb-2 shadow-[2px_2px_0px_rgba(0,0,0,1)]"
      >
        {pubDate}
      </p>
      <p
        class="text-sm mb-4 overflow-hidden"
        style="display: -webkit-box; -webkit-line-clamp: 3; -webkit-box-orient: vertical;"
      >
        {truncateText(description, 150)}
      </p>
      <p
        class="font-body font-bold w-fit p-1 bg-accent-500
  hover:bg-accent-400
  shadow-[2px_2px_0px_rgba(0,0,0,1)]
  md:shadow-[4px_4px_0px_rgba(0,0,0,1)]
  md:hover:shadow-[2px_2px_0px_rgba(0,0,0,1)]
  transition ease-in-out duration-300"
      >
        <a href={url}>Read more...</a>
      </p>
    </div>
  </div>
</div>
